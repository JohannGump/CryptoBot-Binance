name: Model related builds
on:
  push:
    branches:
      - model-fit

env:
  DOCKERHUB_ID: mlops23cryptobot
  DOCKERHUB_TOKEN: dckr_pat_BT0fZXAOu1IPLx_LiMJk8VT1ICE

jobs:
  model-fit:
    name: Build model-fit
    runs-on: ubuntu-20.04
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_ID }}
          password: ${{ env.DOCKERHUB_TOKEN }}
      -
        name: Build & push model-fit
        uses: docker/build-push-action@v4
        with:
          context: .
          file: model/Dockerfile.model-fit
          push: true
          tags: |
            ${{ env.DOCKERHUB_ID }}/model-fit:${{ github.sha }}
            ${{ env.DOCKERHUB_ID }}/model-fit:latest
          cache-from: type=registry,ref=${{ env.DOCKERHUB_ID }}/model-fit:latest
          cache-to: type=inline

  train:
    name: Train models
    needs: model-fit
    runs-on: ubuntu-latest
    services:
      database:
        # MySQL server (to be replaced with an externam one)
        image: mysql:8.1.0
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: klines_history
          MYSQL_ROOT_PASSWORD: password
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: |
            binance_bridge/requirements.txt
            data/requirements.txt
      -
        run: pip install -r binance_bridge/requirements.txt -r data/requirements.txt 
      -
        name: Loads training data
        env:
          KLINESDB_HOST: localhost
          KLINESDB_USER: root
          KLINESDB_PASSWORD: password
          KLINESDB_DBNAME: klines_history
          KLINES_MAX_RECORDS_PER_SYTS: 5000
        run: |
          cd data
          python build_history.py
      -
        name: Fit models
        run: |
          docker run --rm \
          --network ${{ job.container.network }} \
          -v /model_fit:/src/model_fit \
          -e KLINESDB_HOST=database \
          -e KLINESDB_USER=root \
          -e KLINESDB_PASSWORD=password \
          -e KLINESDB_DBNAME=klines_history \
          $DOCKERHUB_ID/model-fit:latest
      -
        name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: models.${{ github.sha }}
          path: /model_fit

  package:
    name: TFS embedding
    needs: train
    runs-on: ubuntu-20.04
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: models.${{ github.sha }}
          path: models
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_ID }}
          password: ${{ env.DOCKERHUB_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Build & push model-serve
        uses: docker/build-push-action@v4
        with:
          context: .
          file: model/Dockerfile.model-serve
          build-args: |
            MODEL_SRC=models
          push: true
          tags: |
            ${{ env.DOCKERHUB_ID }}/model-serve:${{ github.sha }}
            ${{ env.DOCKERHUB_ID }}/model-serve:latest
          cache-from: type=registry,ref=${{ env.DOCKERHUB_ID }}/model-serve:latest
          cache-to: type=inline